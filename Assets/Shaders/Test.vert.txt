#version 330 core
			
layout(location = 0) in vec3 a_Position;
layout(location = 1) in vec2 a_TextureCoords;
layout(location = 2) in vec3 a_Normal;

uniform mat4 u_ViewProjection;
uniform mat4 u_Transform;
uniform vec3 u_CameraPos;


out vec2 t_Position;
out vec3 FragPos;
out vec3 Normal;

void main()
{
    	t_Position = a_TextureCoords;
    	FragPos = (u_Transform * vec4(a_Position, 1.0)).xyz;
    	Normal = mat3(transpose(inverse(u_Transform))) * a_Normal;
	Normal= normalize(Normal);
    	gl_Position = u_ViewProjection * u_Transform * vec4(a_Position, 1.0);

}
